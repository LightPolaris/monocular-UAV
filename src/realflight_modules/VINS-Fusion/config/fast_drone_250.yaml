%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1


imu_topic: "/mavros/imu/data_raw"
# image0_topic: "/camera/infra1/image_rect_raw"
# image1_topic: "/camera/infra2/image_rect_raw"

image0_topic: "/camera/color/image_raw"

output_path: "/home/pol/vins_output"


# cam0_calib: "left.yaml"
# cam1_calib: "right.yaml"
cam0_calib: "astra.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -2.2444223656443052e-02, -1.4389728539580371e-02,
       9.9964453309014645e-01, -3.8994826879298811e-02,
       -9.9886414071743657e-01, 4.2360952181732858e-02,
       -2.1816922768208569e-02, 5.2569109501358104e-02,
       -4.2031954668758920e-02, -9.9899874146207712e-01,
       -1.5324142517911810e-02, 8.9821442836047302e-02, 0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -2.3978061828469066e-02, -3.7358273057572111e-02,
#        9.9901422011155872e-01, 3.1433282157667719e-02,
#        -9.9970059034452086e-01, 5.7707226046672666e-03,
#        -2.3778738937050070e-02, 2.8658509804410592e-02,
#        -4.8767013202067888e-03, -9.9928527368053199e-01,
#        -3.7485458373316405e-02, 6.0688772520138198e-02, 0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -3.0597105734350372e-02, -5.8927835241672222e-03,
#        9.9951442822153314e-01, 4.7302157421591003e-02,
#        -9.9953144626651957e-01, -6.5966180705800959e-04,
#        -3.0601515822914926e-02, 2.2936545354189812e-02,
#        8.3966960215681175e-04, -9.9998241981978753e-01,
#        -5.8698386963871307e-03, 6.1639590858913150e-02, 0., 0., 0., 1. ]


body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -3.0069515759978405e-02, -5.7183785193312686e-03,
       9.9953145241611574e-01, 4.4848038940723180e-02,
       -9.9954744323873768e-01, -6.8446400583832556e-04,
       -3.0073912680706305e-02, -2.7107742793766636e-02,
       8.5611731814771996e-04, -9.9998341569054738e-01,
       -5.6952091272581828e-03, 6.1794907739113121e-02, 0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.05                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/pol/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

